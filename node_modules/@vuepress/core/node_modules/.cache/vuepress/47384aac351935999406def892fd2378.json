{"remainingRequest":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js??ref--3-0!/Users/shaojm/work/www/acquirer-api-docs/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/shaojm/work/www/acquirer-api-docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/shaojm/work/www/acquirer-api-docs/docs/v4/developer/zh/services/buildingTools/magento235.md?vue&type=template&id=9fe9e14a","dependencies":[{"path":"/Users/shaojm/work/www/acquirer-api-docs/docs/v4/developer/zh/services/buildingTools/magento235.md","mtime":1698922442975},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js","mtime":1698386204375},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js","mtime":1698386204375},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/babel-loader/lib/index.js","mtime":1698386204160},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1698386206165},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js","mtime":1698386204375},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/index.js","mtime":1698386206165},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1698386203298}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHsKICB2YXIgX3ZtID0gdGhpcywKICAgIF9jID0gX3ZtLl9zZWxmLl9jOwogIHJldHVybiBfYygnQ29udGVudFNsb3RzRGlzdHJpYnV0b3InLCB7CiAgICBhdHRyczogewogICAgICAic2xvdC1rZXkiOiBfdm0uJHBhcmVudC5zbG90S2V5CiAgICB9CiAgfSwgW19jKCdoMScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJtYWdlbnRvMi0zLTUtcHBwYXktcGx1Z2luLWluc3RhbGxhdGlvbi1pbnN0cnVjdGlvbnMiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNtYWdlbnRvMi0zLTUtcHBwYXktcGx1Z2luLWluc3RhbGxhdGlvbi1pbnN0cnVjdGlvbnMiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIE1hZ2VudG8yLjMuNS1QUFBheSBQbHVnaW4gaW5zdGFsbGF0aW9uIGluc3RydWN0aW9ucyIpXSksIF92bS5fdigiICIpLCBfYygnaDInLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAicHJlcmVxdWlzaXRlcy1mb3ItaW5zdGFsbGF0aW9uIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjcHJlcmVxdWlzaXRlcy1mb3ItaW5zdGFsbGF0aW9uIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBQcmVyZXF1aXNpdGVzIGZvciBpbnN0YWxsYXRpb24iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2Jsb2NrcXVvdGUnLCBbX2MoJ3VsJywgW19jKCdsaScsIFtfdm0uX3YoIm1hZ2VudG8gdmVyc2lvbj49Mi4zLjUiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigicGhwIHZlcnNpb24gPj03LjEiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigicGhwIGV4dGlvbnNpb246Y3VybCBiY21hdGgiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiY2htb2QgNzc3IC9tYWdlbnRvUm9vdC92YXIvbG9nIildKV0pXSksIF92bS5fdigiICIpLCBfYygnaHInKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiVGhlIGZvbGxvd2luZyBhcmUgbm9uLWVzc2VudGlhbCBzZXR0aW5ncy4gSWYgYSA1MDQgZXJyb3Igb2NjdXJzLCBjaGVjayB0aGUgZm9sbG93aW5nIG9wdGlvbnM6IildKSwgX3ZtLl92KCIgIiksIF9jKCd1bCcsIFtfYygnbGknLCBbX3ZtLl92KCJbIF0gcGhwLmluaSBleGVjdXRpb24gdGltZW91dCIpXSksIF92bS5fdigiICIpLCBfYygnbGknLCBbX3ZtLl92KCJbIF0gbmdpbnggb3IgYXBhY2hlIHNldCBleGVjdXRpb24gdGltZW91dCIpXSldKSwgX3ZtLl92KCIgIiksIF9jKCdocicpLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIFtfYygnQ29tbW9uLVdhcnJpbmcnLCBbX2MoJ3VsJywgW19jKCdsaScsIFtfdm0uX3YoIk9yZGVyIG51bWJlcnMgdW5kZXIgdGhlIHNhbWUgYWNjSWQgbXVzdCBub3QgYmUgcmVwZWF0ZWQgYW5kIG11c3QgYmUgbW9ub3RvbmljYWxseSBpbmNyZWFzaW5nLCBvdGhlcndpc2UgaXQgbWF5IGNhdXNlIGlzc3VlcyB3aXRoIG9yZGVyIHN0YXR1cy4iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiT3JkZXJzIGZyb20gZGlmZmVyZW50IGRhdGFiYXNlcyBjYW5ub3Qgc2hhcmUgdGhlIHNhbWUgYWNjSWQuIildKSwgX3ZtLl92KCIgIiksIF9jKCdsaScsIFtfdm0uX3YoIklmIHRoZXJlIGhhdmUgYmVlbiB0cmFuc2FjdGlvbnMgdW5kZXIgdGhlIGFjY0lkLCB0aGUgc3RhcnRpbmcgdmFsdWUgZm9yIHRoZSBJRCBvZiBuZXcgb3JkZXJzIHNob3VsZCBiZSBzZXQgdG8gYSB2YWx1ZSBncmVhdGVyIHRoYW4gdGhlIG1heGltdW0gSUQgb2YgZXhpc3Rpbmcgb3JkZXJzIGJlZm9yZSBpbnN0YWxsaW5nIHRoZSBwbHVnaW4uIildKSwgX3ZtLl92KCIgIiksIF9jKCdsaScsIFtfdm0uX3YoIldoZW4gcmVzZXR0aW5nIHRoZSBkYXRhYmFzZSwgbWlncmF0aW5nIGEgc3RvcmUgb3IgYWNjSWQgdG8gYW5vdGhlciBzdG9yZSwgY2hlY2tpbmcgdGhlIG1heGltdW0gdmFsdWUgb2Ygb3JkZXIgbnVtYmVycyB1bmRlciB0aGUgYWNjSWQgaXMgbmVjZXNzYXJ5LiIpXSldKV0pXSwgMSksIF92bS5fdigiICIpLCBfYygnaDInLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAibWFnZW50by1pbnN0YWxsYXRpb24tcGF0aC1ydWxlcyIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI21hZ2VudG8taW5zdGFsbGF0aW9uLXBhdGgtcnVsZXMiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIE1hZ2VudG8gSW5zdGFsbGF0aW9uIHBhdGggcnVsZXMiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCJBZnRlciBleHRyYWN0aW5nIHRoZSBwbHVnaW4gcGFja2FnZSwgd2UgZmlyc3QgbG9vayBhdCB0aGUgcmVnaXN0cmF0aW9uLnBocCBmaWxlIG9mIHRoZSBwbHVnaW4gYXJjaGl2ZS4iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2UtcGhwIGxpbmUtbnVtYmVycy1tb2RlIgogIH0sIFtfYygncHJlJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogImxhbmd1YWdlLXBocCIKICAgIH0KICB9LCBbX2MoJ2NvZGUnLCBbX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gY2xhc3MtbmFtZSBjbGFzcy1uYW1lLWZ1bGx5LXF1YWxpZmllZCBzdGF0aWMtY29udGV4dCIKICAgIH0KICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gcHVuY3R1YXRpb24iCiAgICB9CiAgfSwgW192bS5fdigiXFwiKV0pLCBfdm0uX3YoIk1hZ2VudG8iKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gcHVuY3R1YXRpb24iCiAgICB9CiAgfSwgW192bS5fdigiXFwiKV0pLCBfdm0uX3YoIkZyYW1ld29yayIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBwdW5jdHVhdGlvbiIKICAgIH0KICB9LCBbX3ZtLl92KCJcXCIpXSksIF92bS5fdigiQ29tcG9uZW50IiksIF9jKCdzcGFuJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogInRva2VuIHB1bmN0dWF0aW9uIgogICAgfQogIH0sIFtfdm0uX3YoIlxcIildKSwgX3ZtLl92KCJDb21wb25lbnRSZWdpc3RyYXIiKV0pLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBvcGVyYXRvciIKICAgIH0KICB9LCBbX3ZtLl92KCI6OiIpXSksIF9jKCdzcGFuJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogInRva2VuIGZ1bmN0aW9uIgogICAgfQogIH0sIFtfdm0uX3YoInJlZ2lzdGVyIildKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gcHVuY3R1YXRpb24iCiAgICB9CiAgfSwgW192bS5fdigiKCIpXSksIF92bS5fdigiXG4gICAgIiksIF9jKCdzcGFuJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogInRva2VuIGNsYXNzLW5hbWUgY2xhc3MtbmFtZS1mdWxseS1xdWFsaWZpZWQgc3RhdGljLWNvbnRleHQiCiAgICB9CiAgfSwgW19jKCdzcGFuJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogInRva2VuIHB1bmN0dWF0aW9uIgogICAgfQogIH0sIFtfdm0uX3YoIlxcIildKSwgX3ZtLl92KCJNYWdlbnRvIiksIF9jKCdzcGFuJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogInRva2VuIHB1bmN0dWF0aW9uIgogICAgfQogIH0sIFtfdm0uX3YoIlxcIildKSwgX3ZtLl92KCJGcmFtZXdvcmsiKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gcHVuY3R1YXRpb24iCiAgICB9CiAgfSwgW192bS5fdigiXFwiKV0pLCBfdm0uX3YoIkNvbXBvbmVudCIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBwdW5jdHVhdGlvbiIKICAgIH0KICB9LCBbX3ZtLl92KCJcXCIpXSksIF92bS5fdigiQ29tcG9uZW50UmVnaXN0cmFyIildKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gb3BlcmF0b3IiCiAgICB9CiAgfSwgW192bS5fdigiOjoiKV0pLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBjb25zdGFudCIKICAgIH0KICB9LCBbX3ZtLl92KCJNT0RVTEUiKV0pLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBwdW5jdHVhdGlvbiIKICAgIH0KICB9LCBbX3ZtLl92KCIsIildKSwgX3ZtLl92KCJcbiAgICAiKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gc3RyaW5nIHNpbmdsZS1xdW90ZWQtc3RyaW5nIgogICAgfQogIH0sIFtfdm0uX3YoIidQcHBheV9QcHBheSciKV0pLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBwdW5jdHVhdGlvbiIKICAgIH0KICB9LCBbX3ZtLl92KCIsIildKSwgX3ZtLl92KCJcbiAgICAiKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gY29uc3RhbnQiCiAgICB9CiAgfSwgW192bS5fdigiX19ESVJfXyIpXSksIF92bS5fdigiXG4iKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gcHVuY3R1YXRpb24iCiAgICB9CiAgfSwgW192bS5fdigiKSIpXSksIF9jKCdzcGFuJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogInRva2VuIHB1bmN0dWF0aW9uIgogICAgfQogIH0sIFtfdm0uX3YoIjsiKV0pLCBfdm0uX3YoIlxuIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXJzLXdyYXBwZXIiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCIxIildKSwgX2MoJ2JyJyksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCIyIildKSwgX2MoJ2JyJyksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCIzIildKSwgX2MoJ2JyJyksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCI0IildKSwgX2MoJ2JyJyksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCI1IildKSwgX2MoJ2JyJyldKV0pLCBfYygncCcsIFtfdm0uX3YoIlRoZSBuYW1lIG9mIHRoZSBwbHVnaW4gcGFja2FnZSBpcyBQcHBheSxUaGUgbmFtZSBvZiB0aGUgcGx1Z2luIGlzIFBwcGF544CCXG5UaGVyZWZvcmUsIHRoZSBpbnN0YWxsYXRpb24gZGlyZWN0b3J5IGlzIGFwcC9jb2RlL1BwcGF5L1BwcGF5L1xuSnVzdCBleHRyYWN0IHRoZSBwbHVnaW4gY29kZSB0byBhcHAvY29kZS9QcHBheS9QcHBheS8gZGlyZWN0b3J5LiIpXSksIF92bS5fdigiICIpLCBfYygnaDInLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAiaW5zdGFsbGF0aW9uLXByb2Nlc3MiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNpbnN0YWxsYXRpb24tcHJvY2VzcyIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgSW5zdGFsbGF0aW9uIHByb2Nlc3MiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCJQcHBheSBjb21lcyB3aXRoIGEgY29tcGxldGUgZGlyZWN0b3J5IHN0cnVjdHVyZSwgYW5kIHRoZSBwbHVnaW4gY29udGFpbnMgYW4gYXBwLyBkaXJlY3RvcnkgYWZ0ZXIgZXh0cmFjdGlvbi4gSW4gdGhpcyBjYXNlLCB0aGVyZSBpcyBubyBuZWVkIHRvIGNoZWNrIHRoZSByZWdpc3RyYXRpb24ucGhwIGZpbGUsIGp1c3QgZXh0cmFjdCBpdCBkaXJlY3RseSBpbnRvIHRoZSBwcm9qZWN0IHJvb3QgZGlyZWN0b3J5LiIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIkFmdGVyIGluc3RhbGxpbmcgdGhlIHBsdWdpbiB2aWEgRlRQLCBpdCBuZWVkcyB0byBiZSBlbmFibGVkIGFzIGl0IGlzIGRpc2FibGVkIGJ5IGRlZmF1bHQuIFRvIGRvIHNvLCBTU0ggaW50byB0aGUgc2VydmVyIGFuZCBuYXZpZ2F0ZSB0byB0aGUgTWFnZW50byBwcm9qZWN0IHJvb3QgZGlyZWN0b3J5LiIpXSksIF92bS5fdigiICIpLCBfYygnaHInKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJfMS12aWV3aW5nLXRoZS1saXN0LW9mLXBsdWdpbnMiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNfMS12aWV3aW5nLXRoZS1saXN0LW9mLXBsdWdpbnMiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIDEuVmlld2luZyB0aGUgbGlzdCBvZiBwbHVnaW5zIildKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxhbmd1YWdlLXNoZWxsIGxpbmUtbnVtYmVycy1tb2RlIgogIH0sIFtfYygncHJlJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogImxhbmd1YWdlLXNoZWxsIgogICAgfQogIH0sIFtfYygnY29kZScsIFtfdm0uX3YoInBocCBiaW4vbWFnZW50byBtb2R1bGU6c3RhdHVzXG4iKV0pXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlcnMtd3JhcHBlciIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjEiKV0pLCBfYygnYnInKV0pXSksIF9jKCdwJywgW192bS5fdigiVGhpcyBjb21tYW5kIGRpc3BsYXlzIHRoZSBsaXN0IG9mIHBsdWdpbnMsIGFuZCBhdCB0aGUgZW5kIG9mIHRoZSBsaXN0IHdlIGNhbiBzZWUgUHBwYXlfUHBwYXkgd2l0aCB0aGUgZm9sbG93aW5nIGluZm9ybWF0aW9uOiIpXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS1zaGVsbCBsaW5lLW51bWJlcnMtbW9kZSIKICB9LCBbX2MoJ3ByZScsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJsYW5ndWFnZS1zaGVsbCIKICAgIH0KICB9LCBbX2MoJ2NvZGUnLCBbX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gcHVuY3R1YXRpb24iCiAgICB9CiAgfSwgW192bS5fdigiLi4iKV0pLCBfdm0uX3YoIi5cbkxpc3Qgb2YgZGlzYWJsZWQgbW9kdWxlczpcblBwcGF5X1BwcGF5XG4iKV0pXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlcnMtd3JhcHBlciIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjEiKV0pLCBfYygnYnInKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjIiKV0pLCBfYygnYnInKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjMiKV0pLCBfYygnYnInKV0pXSksIF9jKCdwJywgW192bS5fdigiVGhlIHBsdWdpbiBpcyBkaXNhYmxlZFxuIiksIF9jKCdzdHJvbmcnLCBbX3ZtLl92KCJJZiB5b3UgZG8gbm90IHNlZSB5b3VyIHBsdWdpbiBpbiB0aGUgbGlzdCwgaXQgbWVhbnMgdGhhdCB5b3VyIHBsdWdpbiB3YXMgbm90IGluc3RhbGxlZCBjb3JyZWN0bHksIHRoZSBpbnN0YWxsYXRpb24gZGlyZWN0b3J5IGlzIGluY29ycmVjdCwgb3IgdGhlIHN5c3RlbSBkaWQgbm90IHJlY29nbml6ZSBpdC4iKV0pXSksIF92bS5fdigiICIpLCBfYygnaHInKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJfMi1lbmFibGluZy10aGUtcGx1Z2luLWFuZC1pbnN0YWxsaW5nLXBsdWdpbi1kYXRhIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjXzItZW5hYmxpbmctdGhlLXBsdWdpbi1hbmQtaW5zdGFsbGluZy1wbHVnaW4tZGF0YSIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgMi5FbmFibGluZyB0aGUgcGx1Z2luIGFuZCBpbnN0YWxsaW5nIHBsdWdpbiBkYXRhIildKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxhbmd1YWdlLXNoZWxsIGxpbmUtbnVtYmVycy1tb2RlIgogIH0sIFtfYygncHJlJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogImxhbmd1YWdlLXNoZWxsIgogICAgfQogIH0sIFtfYygnY29kZScsIFtfdm0uX3YoInBocCBiaW4vbWFnZW50byBtb2R1bGU6ZW5hYmxlIC0tY2xlYXItc3RhdGljLWNvbnRlbnQgUHBwYXlfUHBwYXlcbnBocCBiaW4vbWFnZW50byBzZXR1cDp1cGdyYWRlXG5waHAgYmluL21hZ2VudG8gc2V0dXA6ZGk6Y29tcGlsZVxuIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXJzLXdyYXBwZXIiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCIxIildKSwgX2MoJ2JyJyksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCIyIildKSwgX2MoJ2JyJyksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCIzIildKSwgX2MoJ2JyJyldKV0pLCBfYygnaHInKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJfMy1kZXBsb3kiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNfMy1kZXBsb3kiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIDMuZGVwbG95IildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiSWYgeW91IGFyZSBpbiBkZWZhdWx0IG1vZGUgb3IgcHJvZHVjdGlvbiBtb2RlLCB5b3UgbmVlZCB0byBkZXBsb3kgc3RhdGljIGNvbnRlbnQiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2Utc2hlbGwgbGluZS1udW1iZXJzLW1vZGUiCiAgfSwgW19jKCdwcmUnLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAibGFuZ3VhZ2Utc2hlbGwiCiAgICB9CiAgfSwgW19jKCdjb2RlJywgW192bS5fdigicGhwIGJpbi9tYWdlbnRvIGNhY2hlOmNsZWFuXG5waHAgYmluL21hZ2VudG8gY2FjaGU6Zmx1c2hcbnBocCBiaW4vbWFnZW50byBzZXR1cDpzdGF0aWMtY29udGVudDpkZXBsb3kgIiksIF9jKCdzcGFuJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogInRva2VuIHBhcmFtZXRlciB2YXJpYWJsZSIKICAgIH0KICB9LCBbX3ZtLl92KCItZiIpXSksIF92bS5fdigiXG4iKV0pXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlcnMtd3JhcHBlciIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjEiKV0pLCBfYygnYnInKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjIiKV0pLCBfYygnYnInKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjMiKV0pLCBfYygnYnInKV0pXSksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJfNC1ydW50aW1lZXhjZXB0aW9uIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjXzQtcnVudGltZWV4Y2VwdGlvbiIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgNC5SdW50aW1lRXhjZXB0aW9uIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiSWYgeW91IGVuY291bnRlciBhbiBlcnJvciBzdWNoIGFzIFtSdW50aW1lRXhjZXB0aW9uXSwgaXQgbWVhbnMgdGhhdCB0aGUgY29kZSBpcyBjYWNoZWQgYW5kIHlvdSBuZWVkIHRvIHVwZGF0ZSB0aGUgc3lzdGVtLiIpXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS1zaGVsbCBsaW5lLW51bWJlcnMtbW9kZSIKICB9LCBbX2MoJ3ByZScsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJsYW5ndWFnZS1zaGVsbCIKICAgIH0KICB9LCBbX2MoJ2NvZGUnLCBbX3ZtLl92KCJwaHAgYmluL21hZ2VudG8gbWFpbnRlbmFuY2U6ZW5hYmxlIFxuXG4iKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gZnVuY3Rpb24iCiAgICB9CiAgfSwgW192bS5fdigicm0iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gcGFyYW1ldGVyIHZhcmlhYmxlIgogICAgfQogIH0sIFtfdm0uX3YoIi1yZiIpXSksIF92bS5fdigiIHZhci9kaS8qICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBvcGVyYXRvciIKICAgIH0KICB9LCBbX3ZtLl92KCImJiIpXSksIF92bS5fdigiICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBmdW5jdGlvbiIKICAgIH0KICB9LCBbX3ZtLl92KCJybSIpXSksIF92bS5fdigiICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBwYXJhbWV0ZXIgdmFyaWFibGUiCiAgICB9CiAgfSwgW192bS5fdigiLXJmIildKSwgX3ZtLl92KCIgdmFyL2dlbmVyYXRpb24vKiAiKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gb3BlcmF0b3IiCiAgICB9CiAgfSwgW192bS5fdigiJiYiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gZnVuY3Rpb24iCiAgICB9CiAgfSwgW192bS5fdigicm0iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gcGFyYW1ldGVyIHZhcmlhYmxlIgogICAgfQogIH0sIFtfdm0uX3YoIi1yZiIpXSksIF92bS5fdigiIHZhci9jYWNoZS8qICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBvcGVyYXRvciIKICAgIH0KICB9LCBbX3ZtLl92KCImJiIpXSksIF92bS5fdigiICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBmdW5jdGlvbiIKICAgIH0KICB9LCBbX3ZtLl92KCJybSIpXSksIF92bS5fdigiICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBwYXJhbWV0ZXIgdmFyaWFibGUiCiAgICB9CiAgfSwgW192bS5fdigiLXJmIildKSwgX3ZtLl92KCIgdmFyL3BhZ2VfY2FjaGUvKiAiKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gb3BlcmF0b3IiCiAgICB9CiAgfSwgW192bS5fdigiJiYiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gZnVuY3Rpb24iCiAgICB9CiAgfSwgW192bS5fdigicm0iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3NwYW4nLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAidG9rZW4gcGFyYW1ldGVyIHZhcmlhYmxlIgogICAgfQogIH0sIFtfdm0uX3YoIi1yZiIpXSksIF92bS5fdigiIHZhci92aWV3X3ByZXByb2Nlc3NlZC8qICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBvcGVyYXRvciIKICAgIH0KICB9LCBbX3ZtLl92KCImJiIpXSksIF92bS5fdigiICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBmdW5jdGlvbiIKICAgIH0KICB9LCBbX3ZtLl92KCJybSIpXSksIF92bS5fdigiICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBwYXJhbWV0ZXIgdmFyaWFibGUiCiAgICB9CiAgfSwgW192bS5fdigiLXJmIildKSwgX3ZtLl92KCIgcHViL3N0YXRpYy8qICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBvcGVyYXRvciIKICAgIH0KICB9LCBbX3ZtLl92KCImJiIpXSksIF92bS5fdigiICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBmdW5jdGlvbiIKICAgIH0KICB9LCBbX3ZtLl92KCJybSIpXSksIF92bS5fdigiICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBwYXJhbWV0ZXIgdmFyaWFibGUiCiAgICB9CiAgfSwgW192bS5fdigiLXJmIildKSwgX3ZtLl92KCIgZ2VuZXJhdGVkLyogIiksIF9jKCdzcGFuJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogInRva2VuIG9wZXJhdG9yIgogICAgfQogIH0sIFtfdm0uX3YoIiYmIildKSwgX3ZtLl92KCIgIiksIF9jKCdzcGFuJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogInRva2VuIGZ1bmN0aW9uIgogICAgfQogIH0sIFtfdm0uX3YoIm1rZGlyIildKSwgX3ZtLl92KCIgdmFyL2RpXG5cbnBocCBiaW4vbWFnZW50byBzZXR1cDp1cGdyYWRlICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBvcGVyYXRvciIKICAgIH0KICB9LCBbX3ZtLl92KCImJiIpXSksIF92bS5fdigiIHBocCBiaW4vbWFnZW50byBzZXR1cDpkaTpjb21waWxlXG5cbnBocCBiaW4vbWFnZW50byBzZXR1cDpzdGF0aWMtY29udGVudDpkZXBsb3kgIiksIF9jKCdzcGFuJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogInRva2VuIHBhcmFtZXRlciB2YXJpYWJsZSIKICAgIH0KICB9LCBbX3ZtLl92KCItZiIpXSksIF92bS5fdigiICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBvcGVyYXRvciIKICAgIH0KICB9LCBbX3ZtLl92KCImJiIpXSksIF92bS5fdigiIHBocCBiaW4vbWFnZW50byBpbmRleGVyOnJlaW5kZXggIiksIF9jKCdzcGFuJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogInRva2VuIG9wZXJhdG9yIgogICAgfQogIH0sIFtfdm0uX3YoIiYmIildKSwgX3ZtLl92KCIgcGhwIGJpbi9tYWdlbnRvIG1haW50ZW5hbmNlOmRpc2FibGUgIiksIF9jKCdzcGFuJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogInRva2VuIG9wZXJhdG9yIgogICAgfQogIH0sIFtfdm0uX3YoIiYmIildKSwgX3ZtLl92KCIgcGhwIGJpbi9tYWdlbnRvIGNhY2hlOmNsZWFuICIpLCBfYygnc3BhbicsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJ0b2tlbiBvcGVyYXRvciIKICAgIH0KICB9LCBbX3ZtLl92KCImJiIpXSksIF92bS5fdigiIHBocCBiaW4vbWFnZW50byBjYWNoZTpmbHVzaFxuXG4iKV0pXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlcnMtd3JhcHBlciIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjEiKV0pLCBfYygnYnInKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjIiKV0pLCBfYygnYnInKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjMiKV0pLCBfYygnYnInKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjQiKV0pLCBfYygnYnInKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjUiKV0pLCBfYygnYnInKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjYiKV0pLCBfYygnYnInKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjciKV0pLCBfYygnYnInKSwgX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjgiKV0pLCBfYygnYnInKV0pXSksIF9jKCdocicpLCBfdm0uX3YoIiAiKSwgX2MoJ2gyJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogImNvbmZpZ3VyYXRpb24tcHJvY2VzcyIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI2NvbmZpZ3VyYXRpb24tcHJvY2VzcyIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgQ29uZmlndXJhdGlvbiBwcm9jZXNzIildKSwgX3ZtLl92KCIgIiksIF9jKCdvbCcsIFtfYygnbGknLCBbX3ZtLl92KCJMb2cgaW4gdG8gdGhlIHdlYnNpdGUgYmFja2VuZCIpXSksIF92bS5fdigiICIpLCBfYygnbGknLCBbX3ZtLl92KCJTZWxlY3QiKSwgX2MoJ2NvZGUnLCBbX3ZtLl92KCJTVE9SRVMtPkNvbmZpZ3VyYXRpb24tPlNhbGVzLT5QYXltZW50cyBNZXRob2QtPlBpbmcgUG9uZyBQYXkiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiAiL21hZ2VudG8yMzUvMTYyOTI5NDE0MzIwOS1kY2M4YTcyZC04NzU1LTRmMjYtYTM3NS05OGY2MTMyNjc1MTYucG5nIiwKICAgICAgImFsdCI6ICJpbWFnZS5wbmciCiAgICB9CiAgfSldKSwgX3ZtLl92KCIgIiksIF9jKCdsaScsIFtfdm0uX3YoIkNvbmZpZ3VyZSB0aGUgcGFyYW1ldGVycyBhcyBzaG93biBpbiB0aGUgZm9sbG93aW5nIHBpY3R1cmXvvIFcbiIpLCBfYygnYScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIi9tYWdlbnRvMjM1LzE2MjkyOTQzMzU3OTgtN2E3OTVkOTktNTY2OS00NDIzLWJhN2MtNmZkMWQzMjI2ZGVlLnBuZyIKICAgIH0KICB9LCBbX3ZtLl92KCJpbWFnZS5wbmciKV0pXSldKSwgX3ZtLl92KCIgIiksIF9jKCdocicpLCBfdm0uX3YoIiAiKSwgX2MoJ2gyJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogImVudmlyb25tZW50LXBhcmFtZXRlcnMiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNlbnZpcm9ubWVudC1wYXJhbWV0ZXJzIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBFbnZpcm9ubWVudCBwYXJhbWV0ZXJzIildKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJzYW5kYm94LXN0b3JlLXBhcmFtZXRlcnMiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNzYW5kYm94LXN0b3JlLXBhcmFtZXRlcnMiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIFNhbmRib3ggc3RvcmUgcGFyYW1ldGVycyIpXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS0gbGluZS1udW1iZXJzLW1vZGUiCiAgfSwgW19jKCdwcmUnLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAibGFuZ3VhZ2UtdGV4dCIKICAgIH0KICB9LCBbX2MoJ2NvZGUnLCBbX3ZtLl92KCJjbGllbnRJZDogMjAxODA5MjcxNDMxMzAxMDAxNlxuYWNjSWQ6IDIwMTgwOTI3MTQzMTMwMTAwMTYyOTFcbnNhbHQ6IEY3OEJDOTZBNTU1NDhCMjMxOUVFNjhFMCAgIFxuXG5cbiIpXSldKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVycy13cmFwcGVyIgogIH0sIFtfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiCiAgfSwgW192bS5fdigiMSIpXSksIF9jKCdicicpLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiCiAgfSwgW192bS5fdigiMiIpXSksIF9jKCdicicpLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiCiAgfSwgW192bS5fdigiMyIpXSksIF9jKCdicicpLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiCiAgfSwgW192bS5fdigiNCIpXSksIF9jKCdicicpLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiCiAgfSwgW192bS5fdigiNSIpXSksIF9jKCdicicpXSldKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogInNhbmRib3gtZW52aXJvbm1lbnQtdGVzdC1jYXJkLW51bWJlciIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3NhbmRib3gtZW52aXJvbm1lbnQtdGVzdC1jYXJkLW51bWJlciIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgU2FuZGJveCBlbnZpcm9ubWVudCB0ZXN0IGNhcmQgbnVtYmVyIildKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBsaW5lLW51bWJlcnMtbW9kZSIKICB9LCBbX2MoJ3ByZScsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJsYW5ndWFnZS10ZXh0IgogICAgfQogIH0sIFtfYygnY29kZScsIFtfdm0uX3YoIkNhcmQgbnVtYmVy77yaNDIwMDAwMDAwMDAwMDAwMFxuRXhwaXJhdGlvbiBkYXRl77yaMTIvMjJcbmN2djogMTIzXG5UaGUgQ1ZWIG11c3QgYmUgMyBkaWdpdHMgYW5kIG9ubHkgY29udGFpbiBudW1iZXJzXG4zRFMgdHJhbnNhY3Rpb24gY2FyZO+8mjQ3MTExMDAwMDAwMDAwMDBcbiIpXSldKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVycy13cmFwcGVyIgogIH0sIFtfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiCiAgfSwgW192bS5fdigiMSIpXSksIF9jKCdicicpLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiCiAgfSwgW192bS5fdigiMiIpXSksIF9jKCdicicpLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiCiAgfSwgW192bS5fdigiMyIpXSksIF9jKCdicicpLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiCiAgfSwgW192bS5fdigiNCIpXSksIF9jKCdicicpLCBfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiCiAgfSwgW192bS5fdigiNSIpXSksIF9jKCdicicpXSldKSwgX2MoJ2gzJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogImVudmlyb25tZW50LWFkZHJlc3MiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNlbnZpcm9ubWVudC1hZGRyZXNzIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBFbnZpcm9ubWVudCBhZGRyZXNzIildKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBsaW5lLW51bWJlcnMtbW9kZSIKICB9LCBbX2MoJ3ByZScsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJsYW5ndWFnZS10ZXh0IgogICAgfQogIH0sIFtfYygnY29kZScsIFtfdm0uX3YoIlNhbmRib3ggZW52aXJvbm1lbnQgICAgaHR0cHM6Ly9zYW5kYm94LWFjcXVpcmVyLXBheW1lbnQucGluZ3Bvbmd4LmNvbVxuUHJvZHVjdGlvbiBlbnZpcm9ubWVudCAgICBodHRwczovL2FjcXVpcmVyLXBheW1lbnQucGluZ3Bvbmd4LmNvbVxuIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXJzLXdyYXBwZXIiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCIxIildKSwgX2MoJ2JyJyksIF9jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCIyIildKSwgX2MoJ2JyJyldKV0pLCBfYygnaHInKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJpbnRlZ3JhdGlvbi1wcm9jZXNzIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjaW50ZWdyYXRpb24tcHJvY2VzcyIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgSW50ZWdyYXRpb24gcHJvY2VzcyIpXSksIF92bS5fdigiICIpLCBfYygnaDQnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAic2FuZGJveC1lbnZpcm9ubWVudC1pbnRlZ3JhdGlvbiIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3NhbmRib3gtZW52aXJvbm1lbnQtaW50ZWdyYXRpb24iCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIFNhbmRib3ggZW52aXJvbm1lbnQgaW50ZWdyYXRpb24iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCJJbnN0YWxsIHRoZSBwbHVnaW4gYWNjb3JkaW5nIHRvIHRoZSBmaWxlLlxuQWZ0ZXIgdGhlIHBsdWdpbiBpcyBpbnN0YWxsZWQsIHlvdSBuZWVkIHRvIHBlcmZvcm0gcGF5bWVudCBzZWxmLXRlc3RpbmcgYW5kIGNvbXBsZXRlIHRoZSBmb2xsb3dpbmcgaXRlbXM6XG5bIF0gU2NyZWVuc2hvdCBvZiB0aGUgcGFnZSB3aGVyZSB0aGUgY2FyZCBudW1iZXIgaXMgZW50ZXJlZFxuWyBdIFNjcmVlbnNob3Qgb2YgdGhlIGZpbmFsIHJlZGlyZWN0IHBhZ2UgYWZ0ZXIgcGF5bWVudCBpcyBjb21wbGV0ZWRcblsgXSBTZW5kIHRoZSBzY3JlZW5zaG90cyB0byB0aGUgZG9ja2luZyBncm91cCBhbmQgbm90aWZ5IHRlY2huaWNhbCBzdXBwb3J0LiIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIkR1cmluZyB0aGUgaW5zdGFsbGF0aW9uIHByb2Nlc3MsIGlmIHlvdSBoYXZlIGFueSBpc3N1ZXMsIHlvdSBjYW4gcmVxdWVzdCB0ZWNobmljYWwgc3VwcG9ydCBpbiB0aGUgZG9ja2luZyBncm91cC4iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2hyJyksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIk5vdGU6IildKSwgX3ZtLl92KCIgIiksIF9jKCdibG9ja3F1b3RlJywgW19jKCdwJywgW192bS5fdigiSW4gdGhlIHNhbmRib3ggZW52aXJvbm1lbnQsIG5vIGRlYml0IHdpbGwgYmUgbWFkZSB0byB0aGUgY2FyZGhvbGRlci4gU2hpcHBpbmcgYWZ0ZXIgcGF5bWVudCB3aWxsIGNhdXNlIGEgbG9zcywgYW5kIG5vdCBzaGlwcGluZyBtYXkgcmVzdWx0IGluIGNhcmRob2xkZXIgY29tcGxhaW50cy4gVGhlcmVmb3JlLCBkdXJpbmcgdGhlIGRvY2tpbmcgcGVyaW9kLCB5b3UgbmVlZCB0byBvcGVyYXRlIHdpdGggY2F1dGlvbi4gQWZ0ZXIgdGhlIGludGVncmF0aW9uIHRlc3QgaXMgcGFzc2VkLCBjbG9zZSB0aGUgcGF5bWVudCBjaGFubmVsIGltbWVkaWF0ZWx5IGFuZCB3YWl0IHVudGlsIHRoZSBwcm9kdWN0aW9uIGVudmlyb25tZW50IGlzIG9ubGluZSBiZWZvcmUgb3BlbmluZyBpdC4iKV0pXSksIF92bS5fdigiICIpLCBfYygnaHInKSwgX3ZtLl92KCIgIiksIF9jKCdoMicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJwcm9kdWN0aW9uLWVudmlyb25tZW50LWludGVncmF0aW9uIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjcHJvZHVjdGlvbi1lbnZpcm9ubWVudC1pbnRlZ3JhdGlvbiIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgUHJvZHVjdGlvbiBlbnZpcm9ubWVudCBpbnRlZ3JhdGlvbjoiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ29sJywgW19jKCdsaScsIFtfdm0uX3YoIkFmdGVyIHRoZSBwbHVnaW4gaGFzIGNvbXBsZXRlZCB0aGUgZmlyc3Qgcm91bmQgb2Ygc2FuZGJveCBlbnZpcm9ubWVudCBkb2NraW5nIHdpdGggdGVjaG5pY2FsIHN1cHBvcnQsIGl0IHdpbGwgZW50ZXIgdGhlIHdlYnNpdGUgaW5mb3JtYXRpb24gYW5kIGFjY291bnQgcmV2aWV3IHN0YWdlLiBPbmNlIGFwcHJvdmVkLCBwcm9kdWN0aW9uIGVudmlyb25tZW50IHBhcmFtZXRlcnMgd2lsbCBiZSBwcm92aWRlZC4iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiQWZ0ZXIgb2J0YWluaW5nIHRoZSBwcm9kdWN0aW9uIHBhcmFtZXRlcnMsIGNvbXBsZXRlIHRoZSBmb2xsb3dpbmcgaXRlbXM6IildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3VsJywgW19jKCdsaScsIFtfdm0uX3YoIlsgXSBSZXBsYWNlIHRoZSBzYW5kYm94IGVudmlyb25tZW50IHBhcmFtZXRlcnMgd2l0aCB0aGUgcHJvZHVjdGlvbiBwYXJhbWV0ZXJzLiIpXSksIF92bS5fdigiICIpLCBfYygnbGknLCBbX3ZtLl92KCJbIF0gUGVyZm9ybSBwYXltZW50IHNlbGYtdGVzdGluZyBhbmQgdGFrZSBzY3JlZW5zaG90cy4iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiWyBdIFByZXBhcmUgYSBsaW5rIGZvciBhICQxIHByb2R1Y3QuIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ29sJywgewogICAgYXR0cnM6IHsKICAgICAgInN0YXJ0IjogIjMiCiAgICB9CiAgfSwgW19jKCdsaScsIFtfdm0uX3YoIlNlbmQgdGhlIHNjcmVlbnNob3RzIGFuZCBwcm9kdWN0IGxpbmssIGFuZCBub3RpZnkgdGVjaG5pY2FsIHN1cHBvcnQuIFRoZSBjdXN0b21lci90ZWNobmljYWwgc3VwcG9ydCB3aWxsIGluaXRpYXRlIGEgcmVhbCB0cmFuc2FjdGlvbiB0ZXN0IG9uIHRoZSBwcm9kdWN0IGxpbmsgdG8gdmVyaWZ5IHRoZSBkb2NraW5nIHJlc3VsdCBhbmQgd2Vic2l0ZSBwYXltZW50IGF2YWlsYWJpbGl0eS4iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiQWZ0ZXIgdGhlIHJlYWwgdHJhbnNhY3Rpb24gdGVzdCBpcyBjb21wbGV0ZWQsIHRoZSBtZXJjaGFudCBuZWVkcyB0byBpbml0aWF0ZSBhIHJlZnVuZCB0byB2ZXJpZnkgdGhlIHJlZnVuZCBwcm9jZXNzLiIpXSksIF92bS5fdigiICIpLCBfYygnbGknLCBbX3ZtLl92KCJBZnRlciBjb21wbGV0aW5nIHRoZSBhYm92ZSBwcm9jZXNzLCB0aGUgd2Vic2l0ZSBpbnRlZ3JhdGlvbiBpcyBmaW5pc2hlZCwgYW5kIHRoZSBwYXltZW50IGNoYW5uZWwgaXMgb2ZmaWNpYWxseSBsYXVuY2hlZCBhbmQgYXZhaWxhYmxlIGZvciB1c2UuIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2gyJywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogInByb2R1Y3Rpb24tZW52aXJvbm1lbnQtY29uZmlndXJhdGlvbiIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3Byb2R1Y3Rpb24tZW52aXJvbm1lbnQtY29uZmlndXJhdGlvbiIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgUHJvZHVjdGlvbiBFbnZpcm9ubWVudCBDb25maWd1cmF0aW9uIildKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJyZXZpZXctcHJvY2VzcyIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3Jldmlldy1wcm9jZXNzIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBSZXZpZXcgUHJvY2VzcyIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIlJlY2VpdmUgbm90aWZpY2F0aW9uIGZyb20gdGhlIGludGVncmF0aW9uIGdyb3VwIG9yIGJ1c2luZXNzL2NsaWVudCBhbmQgYXBwcm92ZSB0aGUgcmV2aWV3LiIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIkxvZyBpbiB0byB0aGUgIiksIF9jKCdhJywgewogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiaHR0cHM6Ly9wYXkucGluZ3Bvbmd4LmNvbS9hcS93ZWJzaXRlTGlzdCIsCiAgICAgICJ0YXJnZXQiOiAiX2JsYW5rIiwKICAgICAgInJlbCI6ICJub29wZW5lciBub3JlZmVycmVyIgogICAgfQogIH0sIFtfdm0uX3YoIk1lcmNoYW50IEJhY2tvZmZpY2UiKSwgX2MoJ091dGJvdW5kTGluaycpXSwgMSldKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxhbmd1YWdlLXNoZWxsIGxpbmUtbnVtYmVycy1tb2RlIgogIH0sIFtfYygncHJlJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogImxhbmd1YWdlLXNoZWxsIgogICAgfQogIH0sIFtfYygnY29kZScsIFtfdm0uX3YoImh0dHBzOi8vcGF5LnBpbmdwb25neC5jb20vYXEvd2Vic2l0ZUxpc3RcbiIpXSldKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVycy13cmFwcGVyIgogIH0sIFtfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiCiAgfSwgW192bS5fdigiMSIpXSksIF9jKCdicicpXSldKSwgX2MoJ2g0JywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogImdvLXRvLXRoZS13ZWJzaXRlLWxpc3QiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNnby10by10aGUtd2Vic2l0ZS1saXN0IgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBHbyB0byB0aGUgd2Vic2l0ZSBsaXN0IildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiQXMgc2hvd24gaW4gdGhlIHBpY3R1cmUsIGdvIHRvIEdyb3VwIE1hbmFnZW1lbnQgLT4gVmlldyBEZXRhaWxzIC0+IFdlYnNpdGUgTGlzdC4iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2g0JywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogImdyb3VwLW1hbmFnZW1lbnQiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNncm91cC1tYW5hZ2VtZW50IgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBHcm91cCBNYW5hZ2VtZW50IildKSwgX3ZtLl92KCIgIiksIF9jKCdibG9ja3F1b3RlJywgW19jKCd1bCcsIFtfYygnbGknLCBbX3ZtLl92KCJTZWxlY3QgW1dlYnNpdGUgTWFuYWdlbWVudF0gLSBbR3JvdXAgTWFuYWdlbWVudF0gZnJvbSB0aGUgbWVudSBiYXIgdG8gZW50ZXIgdGhlIEdyb3VwIE1hbmFnZW1lbnQgcGFnZS4iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2xpJywgW192bS5fdigiVGhpcyBmdW5jdGlvbiBhbGxvd3MgY3VycmVudCBtZXJjaGFudHMgdG8gY2xpY2sgXCJDcmVhdGUgR3JvdXBcIiB0byBjcmVhdGUgYSBuZXcgZ3JvdXA7IHRoZSBzeXN0ZW0gd2lsbCBwcm92aWRlIGEgZGVmYXVsdCBncm91cCBieSBkZWZhdWx0LiIpXSksIF92bS5fdigiICIpLCBfYygnbGknLCBbX3ZtLl92KCJXZWJzaXRlcyBhcmUgYXR0YWNoZWQgdG8gZ3JvdXBzLiIpXSksIF92bS5fdigiICIpLCBfYygnbGknLCBbX3ZtLl92KCJDbGljayBcIlZpZXcgRGV0YWlsc1wiIHRvIGVudGVyIHRoZSBncm91cCBkZXRhaWxzIHBhZ2UsIHdoZXJlIHlvdSBjYW4gbW9kaWZ5IHRoZSBncm91cCBuYW1lLCB2aWV3IGFuZCBjb3B5IHRoZSBJRCBudW1iZXIsIGFuZCB2aWV3IHRoZSB3ZWJzaXRlcyB1bmRlciB0aGUgZ3JvdXAuIildKV0pXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6ICIvbWFnZW50bzIzNS8xNjI5NDY4ODY2NjczLWM0ZWRlZjQ3LTk3MDgtNDE0MS05NTljLWZlYWIxYjNmNmMyNi0yMDIxMDgyMTAwMjcyMTAwNC5wbmciLAogICAgICAiYWx0IjogImltYWdlLnBuZyIKICAgIH0KICB9KV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2g0JywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogInNlbGVjdC13ZWJzaXRlIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjc2VsZWN0LXdlYnNpdGUiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIFNlbGVjdCBXZWJzaXRlIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigiU2VsZWN0IHRoZSBjb3JyZXNwb25kaW5nIHdlYnNpdGUgaW4gdGhlIGxpc3QgYmFzZWQgb24gdGhlIGRvbWFpbiBuYW1lIG9mIHRoZSBjdXJyZW50IGludGVncmF0ZWQgd2Vic2l0ZS5cbiIpLCBfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6ICIvbWFnZW50bzIzNS8xNjI5NDY4OTI4NDI3LWJlODhkMTg5LWU4NTAtNDQ3OS1hMjc5LWY4NTM0NDZmYzM3MS0yMDIxMDgyMTAwMjczMDQ5OC5wbmciLAogICAgICAiYWx0IjogImltYWdlLnBuZyIKICAgIH0KICB9KV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2g0JywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogImdldC10aGUtYWNjaWQtZm9yLXRoZS1jb3JyZXNwb25kaW5nLWRvbWFpbi13ZWJzaXRlIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjZ2V0LXRoZS1hY2NpZC1mb3ItdGhlLWNvcnJlc3BvbmRpbmctZG9tYWluLXdlYnNpdGUiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIEdldCB0aGUgYWNjSWQgZm9yIHRoZSBjb3JyZXNwb25kaW5nIGRvbWFpbiB3ZWJzaXRlIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogIi9tYWdlbnRvMjM1LzE2Mjk0Njg5OTQ3ODEtN2U1YmE2MzktMzhjYS00NTkzLWE2Y2ItYTNkMjEzZDcxYmIwLTIwMjEwODIxMDAyNzM5ODIxLnBuZyIsCiAgICAgICJhbHQiOiAiaW1hZ2UucG5nIgogICAgfQogIH0pXSksIF92bS5fdigiICIpLCBfYygnaDQnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAiZ2V0LXRoZS1zZWNyZXQta2V5IgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjZ2V0LXRoZS1zZWNyZXQta2V5IgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBHZXQgdGhlIHNlY3JldCBrZXkuIildKSwgX3ZtLl92KCIgIiksIF9jKCdibG9ja3F1b3RlJywgW19jKCdwJywgW192bS5fdigiU2VsZWN0IFtTeXN0ZW0gTWFuYWdlbWVudF0gLSBbS2V5IE1hbmFnZW1lbnRdIGZyb20gdGhlIG1lbnUgYmFyIGJ5IGRlZmF1bHQgdG8gZW50ZXIgdGhlIEtleSBNYW5hZ2VtZW50IHBhZ2UsIHdoZXJlIHlvdSBjYW4gdmlldyB0aGUgd2Vic2l0ZSdzIHNlY3JldCBrZXkuXG5BZnRlciBlbnRlcmluZyBLZXkgTWFuYWdlbWVudCwgeW91IGNhbiB2aWV3IHRoZSBzZWNyZXQga2V5cyBmb3IgYWxsIHdlYnNpdGVzLCBhbmQgY2xpY2sgXCJLZXkgRGV0YWlsc1wiIHRvIHZpZXcgc3BlY2lmaWMga2V5IGZpZWxkcy5cbktleXMgd2l0aCBhIHN0YXR1cyBvZiBcIk5vcm1hbFwiIGNhbiBiZSB1c2VkLCBhbmQgd2hlbiB0aGUgc3RhdHVzIGlzIFwiQWJub3JtYWxcIiwgdGhleSB3aWxsIG5vdCBiZSBhdmFpbGFibGUgYW5kIHJlbGV2YW50IGJ1c2luZXNzIHBlcnNvbm5lbCBzaG91bGQgYmUgY29udGFjdGVkIHRvIHJlc29sdmUgdGhlIGlzc3VlLiIpXSldKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogIi9tYWdlbnRvMjM1LzE2Mjk0NjkyNTM5MjktNzllMmJhODUtYzhjOS00NjBmLWJiNzktZTZiOTMwMWFlNTU3LTIwMjEwODIxMDAyNzQ4NzM5LnBuZyIsCiAgICAgICJhbHQiOiAiaW1hZ2UucG5nIgogICAgfQogIH0pXSksIF92bS5fdigiICIpLCBfYygnaHInKSwgX3ZtLl92KCIgIiksIF9jKCdoMycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJjb21tb24tbTItY29tbWFuZHMiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNjb21tb24tbTItY29tbWFuZHMiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIENvbW1vbiBNMiBDb21tYW5kcyIpXSksIF92bS5fdigiICIpLCBfYygnaDQnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAiZGlzcGxheS1hZG1pbi11cmkiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNkaXNwbGF5LWFkbWluLXVyaSIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgRGlzcGxheSBBZG1pbiBVUkkuIildKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxhbmd1YWdlLXNoZWxsIGxpbmUtbnVtYmVycy1tb2RlIgogIH0sIFtfYygncHJlJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogImxhbmd1YWdlLXNoZWxsIgogICAgfQogIH0sIFtfYygnY29kZScsIFtfdm0uX3YoInBocCBiaW4vbWFnZW50byBpbmZvOmFkbWludXJpIFxuIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXJzLXdyYXBwZXIiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCIxIildKSwgX2MoJ2JyJyldKV0pLCBfYygnaDQnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAidW5pbnN0YWxsLW1vZHVsZSIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3VuaW5zdGFsbC1tb2R1bGUiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIFVuaW5zdGFsbCBNb2R1bGUuIildKSwgX3ZtLl92KCIgIiksIF9jKCdwJywgW192bS5fdigi5q+U5aaC5o+S5Lu25ZCN5Li6UHBwYXlfUHBwYXkiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2Utc2hlbGwgbGluZS1udW1iZXJzLW1vZGUiCiAgfSwgW19jKCdwcmUnLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAibGFuZ3VhZ2Utc2hlbGwiCiAgICB9CiAgfSwgW19jKCdjb2RlJywgW192bS5fdigicGhwIGJpbi9tYWdlbnRvIG1vZHVsZTp1bmluc3RhbGwgLS1jbGVhci1zdGF0aWMtY29udGVudCBQcHBheV9QcHBheSBcbiIpXSldKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVycy13cmFwcGVyIgogIH0sIFtfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiCiAgfSwgW192bS5fdigiMSIpXSksIF9jKCdicicpXSldKSwgX2MoJ2g0JywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogImVuYWJsZS1tb2R1bGUtcGx1Z2luIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjZW5hYmxlLW1vZHVsZS1wbHVnaW4iCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIEVuYWJsZSBNb2R1bGUgUGx1Z2luLiIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIkZvciBleGFtcGxlLCBpZiB0aGUgcGx1Z2luIG5hbWUgaXMgUHBwYXlfUHBwYXkiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2Utc2hlbGwgbGluZS1udW1iZXJzLW1vZGUiCiAgfSwgW19jKCdwcmUnLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAibGFuZ3VhZ2Utc2hlbGwiCiAgICB9CiAgfSwgW19jKCdjb2RlJywgW192bS5fdigicGhwIGJpbi9tYWdlbnRvIG1vZHVsZTplbmFibGUgLS1jbGVhci1zdGF0aWMtY29udGVudCBQcHBheV9QcHBheSBcbiIpXSldKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVycy13cmFwcGVyIgogIH0sIFtfYygnc3BhbicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXIiCiAgfSwgW192bS5fdigiMSIpXSksIF9jKCdicicpXSldKSwgX2MoJ2g0JywgewogICAgYXR0cnM6IHsKICAgICAgImlkIjogImRpc2FibGUtbW9kdWxlLXBsdWdpbiIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI2Rpc2FibGUtbW9kdWxlLXBsdWdpbiIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgRGlzYWJsZSBNb2R1bGUgUGx1Z2luLiIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIkZvciBleGFtcGxlLCBpZiB0aGUgcGx1Z2luIG5hbWUgaXMgUHBwYXlfUHBwYXkiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2Utc2hlbGwgbGluZS1udW1iZXJzLW1vZGUiCiAgfSwgW19jKCdwcmUnLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAibGFuZ3VhZ2Utc2hlbGwiCiAgICB9CiAgfSwgW19jKCdjb2RlJywgW192bS5fdigicGhwIGJpbi9tYWdlbnRvIG1vZHVsZTpkaXNhYmxlIC0tY2xlYXItc3RhdGljLWNvbnRlbnQgUHBwYXlfUHBwYXkgXG4iKV0pXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlcnMtd3JhcHBlciIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjEiKV0pLCBfYygnYnInKV0pXSksIF9jKCdoNCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJwbHVnaW4tbGlzdC1lbmFibGVkLWFuZC1kaXNhYmxlZCIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3BsdWdpbi1saXN0LWVuYWJsZWQtYW5kLWRpc2FibGVkIgogICAgfQogIH0sIFtfdm0uX3YoIiMiKV0pLCBfdm0uX3YoIiBQbHVnaW4gTGlzdCAoRW5hYmxlZCBhbmQgRGlzYWJsZWQpIildKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxhbmd1YWdlLXNoZWxsIGxpbmUtbnVtYmVycy1tb2RlIgogIH0sIFtfYygncHJlJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogImxhbmd1YWdlLXNoZWxsIgogICAgfQogIH0sIFtfYygnY29kZScsIFtfdm0uX3YoInBocCBiaW4vbWFnZW50byBtb2R1bGU6c3RhdHVzIFxuIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXJzLXdyYXBwZXIiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCIxIildKSwgX2MoJ2JyJyldKV0pLCBfYygnaDQnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAic3dpdGNoLXRvLXByb2R1Y3Rpb24tbW9kZSIKICAgIH0KICB9LCBbX2MoJ2EnLCB7CiAgICBzdGF0aWNDbGFzczogImhlYWRlci1hbmNob3IiLAogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiI3N3aXRjaC10by1wcm9kdWN0aW9uLW1vZGUiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIFN3aXRjaCB0byBQcm9kdWN0aW9uIE1vZGUiKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2Utc2hlbGwgbGluZS1udW1iZXJzLW1vZGUiCiAgfSwgW19jKCdwcmUnLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAibGFuZ3VhZ2Utc2hlbGwiCiAgICB9CiAgfSwgW19jKCdjb2RlJywgW192bS5fdigicGhwIGJpbi9tYWdlbnRvIGRlcGxveTptb2RlOnNldCBwcm9kdWN0aW9uXG4iKV0pXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlcnMtd3JhcHBlciIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjEiKV0pLCBfYygnYnInKV0pXSksIF9jKCdoNCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJzd2l0Y2gtdG8tZGV2ZWxvcGVyLW1vZGUiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNzd2l0Y2gtdG8tZGV2ZWxvcGVyLW1vZGUiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIFN3aXRjaCB0byBEZXZlbG9wZXIgTW9kZSIpXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS1iYXNoIGxpbmUtbnVtYmVycy1tb2RlIgogIH0sIFtfYygncHJlJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogImxhbmd1YWdlLWJhc2giCiAgICB9CiAgfSwgW19jKCdjb2RlJywgW192bS5fdigicGhwIGJpbi9tYWdlbnRvIGRlcGxveTptb2RlOnNldCBkZXZlbG9wZXIgXG4iKV0pXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlcnMtd3JhcHBlciIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjEiKV0pLCBfYygnYnInKV0pXSksIF9jKCdoNCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJjb2RlLWNvbXBpbGF0aW9uIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjY29kZS1jb21waWxhdGlvbiIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgQ29kZSBDb21waWxhdGlvbiIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIkNoZWNrIGlmIHRoZXJlIGFyZSBzeW50YXggZXJyb3JzIGluIHRoZSBjb2RlLCBzdWNoIGFzIHdoZXRoZXIgdGhlIGNhbGxlZCBjbGFzcyBleGlzdHMsIGV0Yy4iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGFuZ3VhZ2Utc2hlbGwgbGluZS1udW1iZXJzLW1vZGUiCiAgfSwgW19jKCdwcmUnLCB7CiAgICBwcmU6IHRydWUsCiAgICBhdHRyczogewogICAgICAiY2xhc3MiOiAibGFuZ3VhZ2Utc2hlbGwiCiAgICB9CiAgfSwgW19jKCdjb2RlJywgW192bS5fdigiYmluL21hZ2VudG8gc2V0dXA6ZGk6Y29tcGlsZSAgXG4iKV0pXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlcnMtd3JhcHBlciIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjEiKV0pLCBfYygnYnInKV0pXSksIF9jKCdoNCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJnZW5lcmF0ZS1zdGF0aWMtZmlsZXMiCiAgICB9CiAgfSwgW19jKCdhJywgewogICAgc3RhdGljQ2xhc3M6ICJoZWFkZXItYW5jaG9yIiwKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiNnZW5lcmF0ZS1zdGF0aWMtZmlsZXMiCiAgICB9CiAgfSwgW192bS5fdigiIyIpXSksIF92bS5fdigiIEdlbmVyYXRlIFN0YXRpYyBGaWxlcy4iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCJHZW5lcmF0ZXMgdGhlIGxhdGVzdCBzdGF0aWMgZmlsZXMgdG8gcHViL3N0YXRpYy4gVGhlc2Ugc3RhdGljIGZpbGVzIGFyZSByZXF1aXJlZCBpbiBib3RoIGRlZmF1bHQgYW5kIHByb2R1Y3Rpb24gbW9kZXMsIG90aGVyd2lzZSBhbiBlcnJvciB3aWxsIG9jY3VyLiIpXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS1zaGVsbCBsaW5lLW51bWJlcnMtbW9kZSIKICB9LCBbX2MoJ3ByZScsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJsYW5ndWFnZS1zaGVsbCIKICAgIH0KICB9LCBbX2MoJ2NvZGUnLCBbX3ZtLl92KCJiaW4vbWFnZW50byBzZXR1cDpzdGF0aWMtY29udGVudDpkZXBsb3kgIiksIF9jKCdzcGFuJywgewogICAgcHJlOiB0cnVlLAogICAgYXR0cnM6IHsKICAgICAgImNsYXNzIjogInRva2VuIHBhcmFtZXRlciB2YXJpYWJsZSIKICAgIH0KICB9LCBbX3ZtLl92KCItZiIpXSksIF92bS5fdigiIFxuIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXJzLXdyYXBwZXIiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCIxIildKSwgX2MoJ2JyJyldKV0pLCBfYygncCcsIFtfdm0uX3YoIkl0IHdpbGwgYXV0b21hdGljYWxseSBnZW5lcmF0ZSBzdGF0aWMgZmlsZXMgZm9yIHRoZSBkZWZhdWx0IGxhbmd1YWdlICh1c3VhbGx5IEVuZ2xpc2gpLiIpXSksIF92bS5fdigiICIpLCBfYygncCcsIFtfdm0uX3YoIlRoYXQgaXMgdG8gc2F5LCB0aGUgYWJvdmUgY29tbWFuZCBvbmx5IGdlbmVyYXRlcyBzdGF0aWMgZmlsZXMgZm9yIGVuX1VTLiBJZiB5b3Ugd2FudCB0byBnZW5lcmF0ZSBzdGF0aWMgZmlsZXMgZm9yIGJvdGggRW5nbGlzaCBhbmQgQ2hpbmVzZSwgeW91IG5lZWQgdG8gc3BlY2lmeSB0aGUgbGFuZ3VhZ2UgcGFja2FnZSBuYW1lIGF0IHRoZSBlbmQgb2YgdGhlIGNvbW1hbmQ6IildKSwgX3ZtLl92KCIgIiksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImxhbmd1YWdlLSBsaW5lLW51bWJlcnMtbW9kZSIKICB9LCBbX2MoJ3ByZScsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJsYW5ndWFnZS10ZXh0IgogICAgfQogIH0sIFtfYygnY29kZScsIFtfdm0uX3YoImJpbi9tYWdlbnRvIHNldHVwOnN0YXRpYy1jb250ZW50OmRlcGxveSBlbl9VUyB6aF9IYW5zX0NOIC1mXG4iKV0pXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlcnMtd3JhcHBlciIKICB9LCBbX2MoJ3NwYW4nLCB7CiAgICBzdGF0aWNDbGFzczogImxpbmUtbnVtYmVyIgogIH0sIFtfdm0uX3YoIjEiKV0pLCBfYygnYnInKV0pXSksIF9jKCdoNCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJpZCI6ICJ1cGRhdGUtbWFnZW50by1kYXRhYmFzZS1kYXRhIgogICAgfQogIH0sIFtfYygnYScsIHsKICAgIHN0YXRpY0NsYXNzOiAiaGVhZGVyLWFuY2hvciIsCiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjdXBkYXRlLW1hZ2VudG8tZGF0YWJhc2UtZGF0YSIKICAgIH0KICB9LCBbX3ZtLl92KCIjIildKSwgX3ZtLl92KCIgVXBkYXRlIE1hZ2VudG8gRGF0YWJhc2UgRGF0YS4iKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ3AnLCBbX3ZtLl92KCJVc2UgdGhpcyBjb21tYW5kIHRvIHVwZGF0ZSBhbnkgZGF0YSByZWxhdGVkIHRvIGRhdGFiYXNlIHRhYmxlcywgc3VjaCBhcyBjdXN0b20gdGFibGVzIGFkZGVkIGJ5IHBsdWdpbnMsIGFkZGVkIHByb2R1Y3QgYXR0cmlidXRlcywgb3IgbW9kaWZpZWQgZmllbGRzLiIpXSksIF92bS5fdigiICIpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJsYW5ndWFnZS1zaGVsbCBsaW5lLW51bWJlcnMtbW9kZSIKICB9LCBbX2MoJ3ByZScsIHsKICAgIHByZTogdHJ1ZSwKICAgIGF0dHJzOiB7CiAgICAgICJjbGFzcyI6ICJsYW5ndWFnZS1zaGVsbCIKICAgIH0KICB9LCBbX2MoJ2NvZGUnLCBbX3ZtLl92KCJwaHAgYmluL21hZ2VudG8gc2V0dXA6dXBncmFkZVxuIildKV0pLCBfdm0uX3YoIiAiKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibGluZS1udW1iZXJzLXdyYXBwZXIiCiAgfSwgW19jKCdzcGFuJywgewogICAgc3RhdGljQ2xhc3M6ICJsaW5lLW51bWJlciIKICB9LCBbX3ZtLl92KCIxIildKSwgX2MoJ2JyJyldKV0pXSk7Cn07CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXTsKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfTs="},null]}