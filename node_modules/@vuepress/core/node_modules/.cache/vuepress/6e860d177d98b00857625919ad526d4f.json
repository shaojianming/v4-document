{"remainingRequest":"/Users/shaojm/work/www/v4-document/node_modules/cache-loader/dist/cjs.js??ref--3-0!/Users/shaojm/work/www/v4-document/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/shaojm/work/www/v4-document/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/shaojm/work/www/v4-document/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/shaojm/work/www/v4-document/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/shaojm/work/www/v4-document/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/shaojm/work/www/v4-document/docs/v4/developer/zh/services/buildingTools/prestashop.md?vue&type=template&id=46b88940","dependencies":[{"path":"/Users/shaojm/work/www/v4-document/docs/v4/developer/zh/services/buildingTools/prestashop.md","mtime":1698978472323},{"path":"/Users/shaojm/work/www/v4-document/node_modules/cache-loader/dist/cjs.js","mtime":1698978475997},{"path":"/Users/shaojm/work/www/v4-document/node_modules/cache-loader/dist/cjs.js","mtime":1698978475997},{"path":"/Users/shaojm/work/www/v4-document/node_modules/babel-loader/lib/index.js","mtime":1698978475803},{"path":"/Users/shaojm/work/www/v4-document/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1698978478815},{"path":"/Users/shaojm/work/www/v4-document/node_modules/cache-loader/dist/cjs.js","mtime":1698978475997},{"path":"/Users/shaojm/work/www/v4-document/node_modules/vue-loader/lib/index.js","mtime":1698978478815},{"path":"/Users/shaojm/work/www/v4-document/node_modules/@vuepress/markdown-loader/index.js","mtime":1698978475260}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}