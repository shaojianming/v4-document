{"remainingRequest":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js??ref--3-0!/Users/shaojm/work/www/acquirer-api-docs/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shaojm/work/www/acquirer-api-docs/docs/.vuepress/components/Tools/SDK.vue?vue&type=template&id=160f16af&scoped=true","dependencies":[{"path":"/Users/shaojm/work/www/acquirer-api-docs/docs/.vuepress/components/Tools/SDK.vue","mtime":1698895830452},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js","mtime":1698386204375},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js","mtime":1698386204375},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/babel-loader/lib/index.js","mtime":1698386204160},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1698386206165},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js","mtime":1698386204375},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/index.js","mtime":1698386206165}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}