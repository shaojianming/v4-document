{"remainingRequest":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js??ref--3-0!/Users/shaojm/work/www/acquirer-api-docs/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/shaojm/work/www/acquirer-api-docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/shaojm/work/www/acquirer-api-docs/docs/v4/developer/zh/services/tokenization/tokenization.md?vue&type=template&id=3e201e64","dependencies":[{"path":"/Users/shaojm/work/www/acquirer-api-docs/docs/v4/developer/zh/services/tokenization/tokenization.md","mtime":1698895830490},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js","mtime":1698386204375},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js","mtime":1698386204375},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/babel-loader/lib/index.js","mtime":1698386204160},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1698386206165},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js","mtime":1698386204375},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/index.js","mtime":1698386206165},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1698386203298}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}