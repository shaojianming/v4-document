{"remainingRequest":"/Users/shaojm/work/www/v4-document/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/shaojm/work/www/v4-document/docs/.vuepress/components/v4/Checkout/Uniformly/data/publicParams.js","dependencies":[{"path":"/Users/shaojm/work/www/v4-document/docs/.vuepress/components/v4/Checkout/Uniformly/data/publicParams.js","mtime":1698922442962},{"path":"/Users/shaojm/work/www/v4-document/node_modules/cache-loader/dist/cjs.js","mtime":1698386204375},{"path":"/Users/shaojm/work/www/v4-document/node_modules/babel-loader/lib/index.js","mtime":1698386204160}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}