{"remainingRequest":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/shaojm/work/www/acquirer-api-docs/docs/.vuepress/theme/layouts/Layout.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/shaojm/work/www/acquirer-api-docs/docs/.vuepress/theme/layouts/Layout.vue","mtime":1695611598548},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js","mtime":1698386204375},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/babel-loader/lib/index.js","mtime":1698386204160},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/cache-loader/dist/cjs.js","mtime":1698386204375},{"path":"/Users/shaojm/work/www/acquirer-api-docs/node_modules/vue-loader/lib/index.js","mtime":1698386206165}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IEhvbWUgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvSG9tZS52dWUnOwppbXBvcnQgTmF2YmFyIGZyb20gJ0B0aGVtZS9jb21wb25lbnRzL05hdmJhci52dWUnOwppbXBvcnQgUGFnZSBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9QYWdlLnZ1ZSc7CmltcG9ydCBDYXRlZ29yaWVzUGFnZSBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9DYXRlZ29yaWVzUGFnZS52dWUnOwppbXBvcnQgVGFnc1BhZ2UgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvVGFnc1BhZ2UudnVlJzsKaW1wb3J0IEFyY2hpdmVzUGFnZSBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9BcmNoaXZlc1BhZ2UudnVlJzsKaW1wb3J0IFNpZGViYXIgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvU2lkZWJhci52dWUnOwppbXBvcnQgQnV0dG9ucyBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9CdXR0b25zLnZ1ZSc7CmltcG9ydCBGb290ZXIgZnJvbSAnQHRoZW1lL2NvbXBvbmVudHMvRm9vdGVyJzsKaW1wb3J0IEJvZHlCZ0ltZyBmcm9tICdAdGhlbWUvY29tcG9uZW50cy9Cb2R5QmdJbWcnOwppbXBvcnQgeyByZXNvbHZlU2lkZWJhckl0ZW1zIH0gZnJvbSAnLi4vdXRpbCc7CmltcG9ydCBzdG9yYWdlIGZyb20gJ2dvb2Qtc3RvcmFnZSc7IC8vIOacrOWcsOWtmOWCqAppbXBvcnQgXyBmcm9tICdsb2Rhc2gnOwpjb25zdCBNT0JJTEVfREVTS1RPUF9CUkVBS1BPSU5UID0gNzE5OyAvLyByZWZlciB0byBjb25maWcuc3R5bApjb25zdCBOQVZCQVJfSEVJR0hUID0gNTg7IC8vIOWvvOiIquagj+mrmOW6pgoKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIEhvbWUsCiAgICBOYXZiYXIsCiAgICBQYWdlLAogICAgQ2F0ZWdvcmllc1BhZ2UsCiAgICBUYWdzUGFnZSwKICAgIEFyY2hpdmVzUGFnZSwKICAgIFNpZGViYXIsCiAgICBGb290ZXIsCiAgICBCdXR0b25zLAogICAgQm9keUJnSW1nCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaGlkZU5hdmJhcjogZmFsc2UsCiAgICAgIGlzU2lkZWJhck9wZW46IHRydWUsCiAgICAgIHNob3dTaWRlYmFyOiBmYWxzZSwKICAgICAgdGhlbWVNb2RlOiAnbGlnaHQnLAogICAgICBzaG93V2luZG93TEI6IHRydWUsCiAgICAgIHNob3dXaW5kb3dSQjogdHJ1ZQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBzaWRlYmFyU2xvdFRvcCgpIHsKICAgICAgcmV0dXJuIHRoaXMuZ2V0SHRtbFN0cignc2lkZWJhclQnKTsKICAgIH0sCiAgICBzaWRlYmFyU2xvdEJvdHRvbSgpIHsKICAgICAgcmV0dXJuIHRoaXMuZ2V0SHRtbFN0cignc2lkZWJhckInKTsKICAgIH0sCiAgICBwYWdlU2xvdFRvcCgpIHsKICAgICAgcmV0dXJuIHRoaXMuZ2V0SHRtbFN0cigncGFnZVQnKTsKICAgIH0sCiAgICBwYWdlU2xvdEJvdHRvbSgpIHsKICAgICAgcmV0dXJuIHRoaXMuZ2V0SHRtbFN0cigncGFnZUInKTsKICAgIH0sCiAgICB3aW5kb3dMQigpIHsKICAgICAgcmV0dXJuIHRoaXMuZ2V0SHRtbFN0cignd2luZG93TEInKTsKICAgIH0sCiAgICB3aW5kb3dSQigpIHsKICAgICAgcmV0dXJuIHRoaXMuZ2V0SHRtbFN0cignd2luZG93UkInKTsKICAgIH0sCiAgICBzaG93UmlnaHRNZW51KCkgewogICAgICBjb25zdCB7CiAgICAgICAgaGVhZGVycwogICAgICB9ID0gdGhpcy4kcGFnZTsKICAgICAgcmV0dXJuICF0aGlzLiRmcm9udG1hdHRlci5ob21lICYmIHRoaXMuJHRoZW1lQ29uZmlnLnJpZ2h0TWVudUJhciAhPT0gZmFsc2UgJiYgaGVhZGVycyAmJiBoZWFkZXJzLmxlbmd0aCAmJiB0aGlzLiRmcm9udG1hdHRlci5zaWRlYmFyICE9PSBmYWxzZTsKICAgIH0sCiAgICBzaG91bGRTaG93TmF2YmFyKCkgewogICAgICBjb25zdCB7CiAgICAgICAgdGhlbWVDb25maWcKICAgICAgfSA9IHRoaXMuJHNpdGU7CiAgICAgIGNvbnN0IHsKICAgICAgICBmcm9udG1hdHRlcgogICAgICB9ID0gdGhpcy4kcGFnZTsKICAgICAgaWYgKGZyb250bWF0dGVyLm5hdmJhciA9PT0gZmFsc2UgfHwgdGhlbWVDb25maWcubmF2YmFyID09PSBmYWxzZSkgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQogICAgICByZXR1cm4gdGhpcy4kdGl0bGUgfHwgdGhlbWVDb25maWcubG9nbyB8fCB0aGVtZUNvbmZpZy5yZXBvIHx8IHRoZW1lQ29uZmlnLm5hdiB8fCB0aGlzLiR0aGVtZUxvY2FsZUNvbmZpZy5uYXY7CiAgICB9LAogICAgc2hvdWxkU2hvd1NpZGViYXIoKSB7CiAgICAgIGNvbnN0IHsKICAgICAgICBmcm9udG1hdHRlcgogICAgICB9ID0gdGhpcy4kcGFnZTsKICAgICAgcmV0dXJuICFmcm9udG1hdHRlci5ob21lICYmIGZyb250bWF0dGVyLnNpZGViYXIgIT09IGZhbHNlICYmIHRoaXMuc2lkZWJhckl0ZW1zLmxlbmd0aDsKICAgIH0sCiAgICBzaWRlYmFySXRlbXMoKSB7CiAgICAgIHJldHVybiByZXNvbHZlU2lkZWJhckl0ZW1zKHRoaXMuJHBhZ2UsIHRoaXMuJHBhZ2UucmVndWxhclBhdGgsIHRoaXMuJHNpdGUsIHRoaXMuJGxvY2FsZVBhdGgpOwogICAgfSwKICAgIHBhZ2VDbGFzc2VzKCkgewogICAgICBjb25zdCB1c2VyUGFnZUNsYXNzID0gdGhpcy4kcGFnZS5mcm9udG1hdHRlci5wYWdlQ2xhc3M7CiAgICAgIHJldHVybiBbewogICAgICAgICduby1uYXZiYXInOiAhdGhpcy5zaG91bGRTaG93TmF2YmFyLAogICAgICAgICdoaWRlLW5hdmJhcic6IHRoaXMuaGlkZU5hdmJhciwKICAgICAgICAvLyDlkJHkuIvmu5rliqjpmpDol4/lr7zoiKrmoI8KICAgICAgICAnc2lkZWJhci1vcGVuJzogdGhpcy5pc1NpZGViYXJPcGVuLAogICAgICAgICduby1zaWRlYmFyJzogIXRoaXMuc2hvdWxkU2hvd1NpZGViYXIsCiAgICAgICAgJ2hhdmUtcmlnaHRtZW51JzogdGhpcy5zaG93UmlnaHRNZW51LAogICAgICAgICdoYXZlLWJvZHktaW1nJzogdGhpcy4kdGhlbWVDb25maWcuYm9keUJnSW1nCiAgICAgIH0sCiAgICAgIC8vICd0aGVtZS1tb2RlLScgKyB0aGlzLnRoZW1lTW9kZSwKICAgICAgdXNlclBhZ2VDbGFzc107CiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgY29uc3Qgc2lkZWJhck9wZW4gPSB0aGlzLiR0aGVtZUNvbmZpZy5zaWRlYmFyT3BlbjsKICAgIGlmIChzaWRlYmFyT3BlbiA9PT0gZmFsc2UpIHsKICAgICAgdGhpcy5pc1NpZGViYXJPcGVuID0gc2lkZWJhck9wZW47CiAgICB9CiAgfSwKICBiZWZvcmVNb3VudCgpIHsKICAgIHRoaXMuaXNTaWRlYmFyT3Blbk9mY2xpZW50V2lkdGgoKTsKICAgIGNvbnN0IG1vZGUgPSBzdG9yYWdlLmdldCgnbW9kZScpOyAvLyDkuI3mlL7lnKhjcmVhdGVk5piv5Zug5Li6dnVlcHJlc3PkuI3og73lnKhjcmVhdGVk6K6/6Zeu5rWP6KeI5ZmoYXBp77yM5aaCd2luZG93CiAgICBpZiAoIW1vZGUgfHwgbW9kZSA9PT0gJ2F1dG8nKSB7CiAgICAgIC8vIOW9k+acquWIh+aNoui/h+aooeW8j++8jOaIluaooeW8j+WkhOS6jifot5/pmo/ns7vnu58n5pe2CiAgICAgIHRoaXMuX2F1dG9Nb2RlKCk7CiAgICB9IGVsc2UgewogICAgICB0aGlzLnRoZW1lTW9kZSA9IG1vZGU7CiAgICB9CiAgICB0aGlzLnNldEJvZHlDbGFzcygpOwoKICAgIC8vIOW8leWFpeWbvuagh+W6kwogICAgY29uc3Qgc29jaWFsID0gdGhpcy4kdGhlbWVDb25maWcuc29jaWFsOwogICAgaWYgKHNvY2lhbCAmJiBzb2NpYWwuaWNvbmZvbnRDc3NGaWxlKSB7CiAgICAgIGxldCBsaW5rRWxtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgibGluayIpOwogICAgICBsaW5rRWxtLnNldEF0dHJpYnV0ZSgncmVsJywgJ3N0eWxlc2hlZXQnKTsKICAgICAgbGlua0VsbS5zZXRBdHRyaWJ1dGUoInR5cGUiLCAidGV4dC9jc3MiKTsKICAgICAgbGlua0VsbS5zZXRBdHRyaWJ1dGUoImhyZWYiLCBzb2NpYWwuaWNvbmZvbnRDc3NGaWxlKTsKICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChsaW5rRWxtKTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICAvLyDliJ3lp4vljJbpobXpnaLml7bpk77mjqXplJrngrnml6Dms5Xot7PovazliLDmjIflrpppZOeahOino+WGs+aWueahiAogICAgY29uc3QgaGFzaCA9IGRvY3VtZW50LmxvY2F0aW9uLmhhc2g7CiAgICBpZiAoaGFzaC5sZW5ndGggPiAxKSB7CiAgICAgIGNvbnN0IGlkID0gZGVjb2RlVVJJQ29tcG9uZW50KGhhc2guc3Vic3RyaW5nKDEpKTsKICAgICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTsKICAgICAgaWYgKGVsZW1lbnQpIGVsZW1lbnQuc2Nyb2xsSW50b1ZpZXcoKTsKICAgIH0KCiAgICAvLyDop6PlhrPnp7vliqjnq6/liJ3lp4vljJbpobXpnaLml7bkvqfovrnmoI/pl6rnjrDnmoTpl67popgKICAgIHRoaXMuc2hvd1NpZGViYXIgPSB0cnVlOwogICAgdGhpcy4kcm91dGVyLmFmdGVyRWFjaCgoKSA9PiB7CiAgICAgIHRoaXMuaXNTaWRlYmFyT3Blbk9mY2xpZW50V2lkdGgoKTsKICAgIH0pOwoKICAgIC8vIOWQkeS4i+a7muWKqOaUtui1t+WvvOiIquagjwogICAgbGV0IHAgPSAwLAogICAgICB0ID0gMDsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCBfLnRocm90dGxlKCgpID0+IHsKICAgICAgaWYgKCF0aGlzLmlzU2lkZWJhck9wZW4pIHsKICAgICAgICAvLyDkvqfovrnmoI/lhbPpl63ml7YKICAgICAgICBwID0gdGhpcy5nZXRTY3JvbGxUb3AoKTsKICAgICAgICBpZiAodCA8IHAgJiYgcCA+IE5BVkJBUl9IRUlHSFQpIHsKICAgICAgICAgIC8vIOWQkeS4i+a7muWKqAogICAgICAgICAgdGhpcy5oaWRlTmF2YmFyID0gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgLy8g5ZCR5LiKCiAgICAgICAgICB0aGlzLmhpZGVOYXZiYXIgPSBmYWxzZTsKICAgICAgICB9CiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICB0ID0gcDsKICAgICAgICB9LCAwKTsKICAgICAgfQogICAgfSwgMzAwKSk7CiAgfSwKICB3YXRjaDogewogICAgaXNTaWRlYmFyT3BlbigpIHsKICAgICAgaWYgKHRoaXMuaXNTaWRlYmFyT3BlbikgewogICAgICAgIC8vIOS+p+i+ueagj+aJk+W8gOaXtu+8jOaBouWkjeWvvOiIquagj+aYvuekugogICAgICAgIHRoaXMuaGlkZU5hdmJhciA9IGZhbHNlOwogICAgICB9CiAgICB9LAogICAgdGhlbWVNb2RlKCkgewogICAgICB0aGlzLnNldEJvZHlDbGFzcygpOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0SHRtbFN0cihtb2R1bGUpIHsKICAgICAgY29uc3QgewogICAgICAgIGh0bWxNb2R1bGVzCiAgICAgIH0gPSB0aGlzLiR0aGVtZUNvbmZpZzsKICAgICAgcmV0dXJuIGh0bWxNb2R1bGVzID8gaHRtbE1vZHVsZXNbbW9kdWxlXSA6ICcnOwogICAgfSwKICAgIHNldEJvZHlDbGFzcygpIHsKICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc05hbWUgPSAndGhlbWUtbW9kZS0nICsgdGhpcy50aGVtZU1vZGU7CiAgICB9LAogICAgZ2V0U2Nyb2xsVG9wKCkgewogICAgICByZXR1cm4gd2luZG93LnBhZ2VZT2Zmc2V0IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgfHwgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AgfHwgMDsKICAgIH0sCiAgICBpc1NpZGViYXJPcGVuT2ZjbGllbnRXaWR0aCgpIHsKICAgICAgaWYgKGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCA8IE1PQklMRV9ERVNLVE9QX0JSRUFLUE9JTlQpIHsKICAgICAgICB0aGlzLmlzU2lkZWJhck9wZW4gPSBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIHRvZ2dsZVNpZGViYXIodG8pIHsKICAgICAgdGhpcy5pc1NpZGViYXJPcGVuID0gdHlwZW9mIHRvID09PSAnYm9vbGVhbicgPyB0byA6ICF0aGlzLmlzU2lkZWJhck9wZW47CiAgICAgIHRoaXMuJGVtaXQoJ3RvZ2dsZS1zaWRlYmFyJywgdGhpcy5pc1NpZGViYXJPcGVuKTsKICAgIH0sCiAgICBfYXV0b01vZGUoKSB7CiAgICAgIGlmICh3aW5kb3cubWF0Y2hNZWRpYSgnKHByZWZlcnMtY29sb3Itc2NoZW1lOiBkYXJrKScpLm1hdGNoZXMpIHsKICAgICAgICAvLyDns7vnu5/lpITkuo7mt7HoibLmqKHlvI8KICAgICAgICB0aGlzLnRoZW1lTW9kZSA9ICdkYXJrJzsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnRoZW1lTW9kZSA9ICdsaWdodCc7CiAgICAgIH0KICAgIH0sCiAgICB0b2dnbGVUaGVtZU1vZGUoa2V5KSB7CiAgICAgIGlmIChrZXkgPT09ICdhdXRvJykgewogICAgICAgIHRoaXMuX2F1dG9Nb2RlKCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy50aGVtZU1vZGUgPSBrZXk7CiAgICAgIH0KICAgICAgc3RvcmFnZS5zZXQoJ21vZGUnLCBrZXkpOwogICAgfSwKICAgIC8vIHNpZGUgc3dpcGUKICAgIG9uVG91Y2hTdGFydChlKSB7CiAgICAgIHRoaXMudG91Y2hTdGFydCA9IHsKICAgICAgICB4OiBlLmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFgsCiAgICAgICAgeTogZS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRZCiAgICAgIH07CiAgICB9LAogICAgb25Ub3VjaEVuZChlKSB7CiAgICAgIGNvbnN0IGR4ID0gZS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRYIC0gdGhpcy50b3VjaFN0YXJ0Lng7CiAgICAgIGNvbnN0IGR5ID0gZS5jaGFuZ2VkVG91Y2hlc1swXS5jbGllbnRZIC0gdGhpcy50b3VjaFN0YXJ0Lnk7CiAgICAgIGlmIChNYXRoLmFicyhkeCkgPiBNYXRoLmFicyhkeSkgJiYgTWF0aC5hYnMoZHgpID4gNDApIHsKICAgICAgICBpZiAoZHggPiAwICYmIHRoaXMudG91Y2hTdGFydC54IDw9IDgwKSB7CiAgICAgICAgICB0aGlzLnRvZ2dsZVNpZGViYXIodHJ1ZSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMudG9nZ2xlU2lkZWJhcihmYWxzZSk7CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Ow=="},null]}